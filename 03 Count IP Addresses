Given a database of first and last IPv4 addresses, calculate the number of addresses between them (including the first one, excluding the last one).

Input
---------------------------------
|     Table    | Column | Type  |
|--------------+--------+-------|
| ip_addresses | id     | int   |
|              | first  | text  |
|              | last   | text  |
---------------------------------
Output
-------------------------
|   Column    |  Type   |
|-------------+---------|
| id          | int     |
| ips_between | bigint  |
-------------------------
All inputs will be valid IPv4 addresses in the form of strings. The last address will always be greater than the first one.

Examples
* With input "10.0.0.0", "10.0.0.50"  => return   50 
* With input "10.0.0.0", "10.0.1.0"   => return  256 
* With input "20.0.0.10", "20.0.1.0"  => return  246

----------------------------------------------------------------------------------------------------------------------------------------------------

WITH ip_conversion AS (
    -- Преобразуем строковые IP-адреса в целые числа
    SELECT
        id,
        (CAST(SPLIT_PART(first, '.', 1) AS bigint) * 256 * 256 * 256 +
         CAST(SPLIT_PART(first, '.', 2) AS bigint) * 256 * 256 +
         CAST(SPLIT_PART(first, '.', 3) AS bigint) * 256 +
         CAST(SPLIT_PART(first, '.', 4) AS bigint)) AS first_ip_num,
        (CAST(SPLIT_PART(last, '.', 1) AS bigint) * 256 * 256 * 256 +
         CAST(SPLIT_PART(last, '.', 2) AS bigint) * 256 * 256 +
         CAST(SPLIT_PART(last, '.', 3) AS bigint) * 256 +
         CAST(SPLIT_PART(last, '.', 4) AS bigint)) AS last_ip_num
    FROM
        ip_addresses
)
SELECT
    id,
    last_ip_num - first_ip_num AS ips_between
FROM
    ip_conversion;
