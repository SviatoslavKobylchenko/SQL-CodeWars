Description
Given a posts table that contains a created_at timestamp column write a query that returns a first date of the month, a number of posts created in a given month and a month-over-month growth rate.

The resulting set should be ordered chronologically by date.

Note:

percent growth rate can be negative
percent growth rate should be rounded to one digit after the decimal point and immediately followed by a percent symbol "%". See the desired output below for the reference.
Desired Output
The resulting set should look similar to the following:

date       | count | percent_growth
-----------+-------+---------------
2016-02-01 |   175 |           null
2016-03-01 |   338 |          93.1%
2016-04-01 |   345 |           2.1%
2016-05-01 |   295 |         -14.5%
2016-06-01 |   330 |          11.9%
...
date - (DATE) a first date of the month
count - (INT) a number of posts in a given month
percent_growth - (TEXT) a month-over-month growth rate expressed in percents

---------------------------------------------------------------------------------------------------------------------------------------------------------

WITH monthly_posts AS (
    SELECT
        DATE(DATE_TRUNC('month', created_at)) AS date,
        COUNT(*) AS count
    FROM
        posts
    GROUP BY
        DATE(DATE_TRUNC('month', created_at))
    ORDER BY
        date
),
growth_rate AS (
    SELECT
        date,
        count,
        LAG(count) OVER (ORDER BY date) AS previous_count
    FROM
        monthly_posts
)
SELECT
    date,
    count,
    CASE
        WHEN previous_count IS NULL THEN NULL
        ELSE ROUND((count - previous_count) * 100.0 / previous_count, 1) || '%'
    END AS percent_growth
FROM
    growth_rate
ORDER BY
    date;
